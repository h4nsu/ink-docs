"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[9860],{89916:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var n=s(17624),r=s(4552);const o={title:"#[ink(selector = S:u32)]",slug:"/macros-attributes/selector",hide_title:!0},c=void 0,l={id:"macros-attributes/selector",title:"#[ink(selector = S:u32)]",description:"Applicable to ink! messages and ink! constructors.",source:"@site/docs/macros-attributes/selector.md",sourceDirName:"macros-attributes",slug:"/macros-attributes/selector",permalink:"/macros-attributes/selector",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/macros-attributes/selector.md",tags:[],version:"current",frontMatter:{title:"#[ink(selector = S:u32)]",slug:"/macros-attributes/selector",hide_title:!0},sidebar:"reference",previous:{title:"#[ink(payable)]",permalink:"/macros-attributes/payable"},next:{title:"#[ink(storage)]",permalink:"/macros-attributes/storage"}},i={},a=[{value:"Examples",id:"examples",level:2},{value:"Controlling the messages selector",id:"controlling-the-messages-selector",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("img",{src:"/img/title/text/selector.svg",className:"titlePic"}),"\n",(0,n.jsx)(t.p,{children:"Applicable to ink! messages and ink! constructors."}),"\n",(0,n.jsx)(t.p,{children:"By default ink! creates a selector for each message and constructor.\nThis is necessary since the contract is compiled to a Wasm blob and functions are invoked by invoking the\nselector, which identifies a method \u2012 method names are no longer available in these underlying layers."}),"\n",(0,n.jsx)(t.p,{children:"Using this attribute it is possible to specify a concrete dispatch selector for the flagged entity. This allows a contract author to precisely control the selectors of their APIs making it possible to rename their API without breakage."}),"\n",(0,n.jsxs)(t.p,{children:["A selector must be a ",(0,n.jsx)(t.code,{children:"u32"})," decodable integer. For example"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"selector = 0xCAFEBABE"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"selector = 42"})}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["An exception is the fallback selector ",(0,n.jsx)(t.code,{children:"_"}),", allowing contract calls not matching any of the other message selectors to be dispatched to a fallback message. Fallback messages can be ",(0,n.jsx)(t.code,{children:"payable"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-rust",children:"#[ink(message, selector = 0xC0DECAFE)]\nfn my_message_1(&self) {}\n\n#[ink(message, selector = 42)]\nfn my_message_2(&self) {}\n\n#[ink(message, payable, selector = _)]\nfn my_fallback(&self) {}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["\u2026 then the selector of ",(0,n.jsx)(t.code,{children:"my_message_1"})," is ",(0,n.jsx)(t.code,{children:"[0xC0, 0xDE, 0xCA, 0xFE]"})," and the selector of ",(0,n.jsx)(t.code,{children:"my_message_2"})," is ",(0,n.jsx)(t.code,{children:"[0, 0, 0, 42]"}),"\nsince setting the selector manually overrides the automatically generated selector."]}),"\n",(0,n.jsx)(t.h2,{id:"controlling-the-messages-selector",children:"Controlling the messages selector"}),"\n",(0,n.jsx)(t.p,{children:"Every ink! message and ink! constructor has a selector with which the\nmessage or constructor can be uniquely identified within the ink! smart contract.\nNon-unique message or constructor selector lead to a compile time error.\nThese selectors are mainly used to drive the contract's dispatch upon calling it."}),"\n",(0,n.jsxs)(t.p,{children:["An ink! smart contract author can control the selector of an ink! message or ink!\nconstructor using the ",(0,n.jsx)(t.code,{children:"selector"})," flag. An example is shown below:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-rust",children:"#[ink::contract]\nmod flipper {\n    #[ink(storage)]\n    pub struct Flipper {\n        value: bool,\n    }\n\n    impl Flipper {\n        #[ink(constructor)]\n        #[ink(selector = 0xDEADBEEF)] // Works on constructors as well.\n        pub fn new(initial_value: bool) -> Self {\n            Flipper { value: initial_value }\n        }\n\n        #[ink(message)]\n        #[ink(selector = 0xCAFEBABE)] // You can either specify selector out-of-line.\n        pub fn flip(&mut self) {\n            self.value = !self.value;\n        }\n\n        #[ink(message, selector = 0xC0DECAFE)] // ...or specify the selector inline.\n        pub fn get(&self) -> bool {\n            self.value\n        }\n    }\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.M)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},4552:(e,t,s)=>{s.d(t,{I:()=>l,M:()=>c});var n=s(11504);const r={},o=n.createContext(r);function c(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);