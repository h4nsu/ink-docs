"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[2688],{18720:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=t(17624),o=t(4552);const s={title:"useBlockHeader",description:"A React hook for fetching block header information on each new block"},a="useBlockHeader",c={id:"frontend/react/hooks/substrate/use-block-header",title:"useBlockHeader",description:"A React hook for fetching block header information on each new block",source:"@site/docs/frontend/react/hooks/substrate/use-block-header.md",sourceDirName:"frontend/react/hooks/substrate",slug:"/frontend/react/hooks/substrate/use-block-header",permalink:"/frontend/react/hooks/substrate/use-block-header",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/react/hooks/substrate/use-block-header.md",tags:[],version:"current",frontMatter:{title:"useBlockHeader",description:"A React hook for fetching block header information on each new block"},sidebar:"reference",previous:{title:"useTransfer",permalink:"/frontend/react/hooks/substrate/use-transfer"},next:{title:"useTimestampDate",permalink:"/frontend/react/hooks/substrate/use-timestamp-date"}},i={},l=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"useblockheader",children:"useBlockHeader"}),"\n",(0,r.jsx)(n.p,{children:"A React hook for fetching block header information on each new block. This hook is used\ninternally to trigger subscriptions when a block updates."}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { useBlockHeader } from 'useink'\n\nfunction Balances() {\n  // This will use the first chain in the configuration array (aka 'default chain')\n  const blockHeader = useBlockHeader() \n  // 'zeitgeist' must be configured in UseInkProvider\n  const zeitBlockHeader = useBlockHeader('zeitgeist')\n\n  return (\n    <ul>\n      <li>Current Block: {blockHeader?.blockNumber ? blockHeader.blockNumber : '--'}</li>\n      <li>Zeitgeist Current Block: {zeitBlockHeader?.blockNumber ? zeitBlockHeader.blockNumber : '--'}</li>\n    </ul>\n  )\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"{\n  blockNumber: number | undefined;\n  header: undefined | {\n    readonly parentHash: Hash;\n    readonly number: Compact<BlockNumber>;\n    readonly stateRoot: Hash;\n    readonly extrinsicsRoot: Hash;\n    readonly digest: Digest;\n  }\n} | undefined\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>c,M:()=>a});var r=t(11504);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);