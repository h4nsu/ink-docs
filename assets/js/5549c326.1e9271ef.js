"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[8808],{87340:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var o=i(17624),e=i(4552);const a={title:"useNotifications",description:"A hook containing tools to add, remove, and fetch transient notification state."},s="useNotifications",c={id:"frontend/notifications/useNotifications",title:"useNotifications",description:"A hook containing tools to add, remove, and fetch transient notification state.",source:"@site/docs/frontend/notifications/useNotifications.mdx",sourceDirName:"frontend/notifications",slug:"/frontend/notifications/useNotifications",permalink:"/frontend/notifications/useNotifications",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/notifications/useNotifications.mdx",tags:[],version:"current",frontMatter:{title:"useNotifications",description:"A hook containing tools to add, remove, and fetch transient notification state."},sidebar:"reference",previous:{title:"Configuration",permalink:"/frontend/notifications/configuration"},next:{title:"toNotificationLevel",permalink:"/frontend/notifications/toNotificationLevel"}},r={},d=[{value:"Return Type",id:"return-type",level:2}];function f(n){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,e.M)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"usenotifications",children:"useNotifications"}),"\n",(0,o.jsx)(t.p,{children:"A hook containing tools to add, remove, and fetch notifications."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { useNotifications } from 'useink/notifications'\n\nexport const MyNotifications = ({ children }) => {\n  const { notifications, addNotification, removeNotification } = useNotifications()\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          addNotification({ message: 'hello from the ink! team \ud83e\udd91', type: 'None' })\n        }}\n      >\n        Say hello\n      </button>\n\n      <ul>\n        {notifications.map((n) => (\n          <li key={n.id} onClick={() => removeNotification(n.id)}>\n            {n.message}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"return-type",children:"Return Type"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"// Returns\ninterface UseNotifications {\n  notifications: {\n    id: string;\n    createdAt: number;\n    type: NotificationType;\n    message: string;\n    // Raw types from PolkadotJs\n    result?: Codec | ISubmittableResult;\n    chain?: ChainId; \n  }[];\n  addNotification: (payload: AddNotificationPayload) => void;\n  removeNotification: (id: string) => void;\n}\n\ninterface AddNotificationPayload {\n  type: NotificationType;\n  message: string;\n  result?: Codec | ISubmittableResult;\n  chain?: ChainId;\n}\n\ntype NotificationType =\n  | 'None'\n  | 'WalletConnected'\n  | 'WalletDisconnected'\n  | 'DryRun'\n  | 'PendingSignature'\n  | 'Errored' // Used for custom JavaScript errors\n     // Potential transaction statuses\n  | 'Future' | 'Ready' | 'Broadcast' | 'InBlock' | 'Retracted' | 'FinalityTimeout' | 'Finalized' | 'Usurped' | 'Dropped' | 'Invalid';\n"})})]})}function l(n={}){const{wrapper:t}={...(0,e.M)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(f,{...n})}):f(n)}},4552:(n,t,i)=>{i.d(t,{I:()=>c,M:()=>s});var o=i(11504);const e={},a=o.createContext(e);function s(n){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(e):n.components||e:s(n.components),o.createElement(a.Provider,{value:t},n.children)}}}]);