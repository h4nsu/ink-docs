"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[4332],{71568:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=n(17624),o=n(4552);const s={title:"useUnixMilliToDate",description:"A React hook for converting unix timestamps in milliseconds to a Date object."},r="useUnixMilliToDate",a={id:"frontend/react/hooks/helpers/use-unix-milli-to-date",title:"useUnixMilliToDate",description:"A React hook for converting unix timestamps in milliseconds to a Date object.",source:"@site/docs/frontend/react/hooks/helpers/use-unix-milli-to-date.md",sourceDirName:"frontend/react/hooks/helpers",slug:"/frontend/react/hooks/helpers/use-unix-milli-to-date",permalink:"/frontend/react/hooks/helpers/use-unix-milli-to-date",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/react/hooks/helpers/use-unix-milli-to-date.md",tags:[],version:"current",frontMatter:{title:"useUnixMilliToDate",description:"A React hook for converting unix timestamps in milliseconds to a Date object."},sidebar:"reference",previous:{title:"useTimestampQuery",permalink:"/frontend/react/hooks/substrate/use-timestamp-query"},next:{title:"Configuration",permalink:"/frontend/configuration"}},l={},c=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"useunixmillitodate",children:"useUnixMilliToDate"}),"\n",(0,i.jsxs)(t.p,{children:["A React hook for converting unix timestamps in milli seconds to a Date object. Values are\ncached internally via ",(0,i.jsx)(t.code,{children:"useMemo"})," to optimize page renders."]}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { useUnixMilliToDate, useTimestampNow } from 'useink'\n\nfunction Now() {\n  // See `useTimestampDate`, which does this work for you.\n  const now = useTimestampNow('phala');\n  const date = useUnixMilliToDate(now);\n\n  return <p>{date.toLocaleTimeString()}</p>;\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"Date | undefined\n"})})]})}function d(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},4552:(e,t,n)=>{n.d(t,{I:()=>a,M:()=>r});var i=n(11504);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);