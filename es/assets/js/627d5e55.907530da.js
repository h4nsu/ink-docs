"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[437],{49892:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=t(17624),r=t(4552);const i={title:"Contract Debugging",slug:"/basics/contract-debugging",hide_title:!0},o="Debugging del Contrato",c={id:"basics/debugging",title:"Contract Debugging",description:"Actualmente existen tres maneras de debuggear tu contrato ink!:",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/basics/debugging.md",sourceDirName:"basics",slug:"/basics/contract-debugging",permalink:"/es/basics/contract-debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/basics/debugging.md",tags:[],version:"current",frontMatter:{title:"Contract Debugging",slug:"/basics/contract-debugging",hide_title:!0},sidebar:"reference",previous:{title:"Testing del Contrato",permalink:"/es/basics/contract-testing"},next:{title:"Contract Verification",permalink:"/es/basics/verification/contract-verification"}},a={},l=[{value:"\xbfC\xf3mo imprimo algo en la consola desde el runtime?",id:"c\xf3mo-imprimo-algo-en-la-consola-desde-el-runtime",level:3},{value:"Ejemplo",id:"ejemplo",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("img",{src:"/img/title/magnifying-glass.svg",className:"titlePic"}),"\n",(0,s.jsx)(n.h1,{id:"debugging-del-contrato",children:"Debugging del Contrato"}),"\n",(0,s.jsx)(n.p,{children:"Actualmente existen tres maneras de debuggear tu contrato ink!:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Puedes escribir test utilizando uno de los mecanismos descritos en la p\xe1gina ",(0,s.jsx)(n.a,{href:"/basics/contract-testing",children:"Testing del Contrato"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Puedes interactuar con tu contrato via UI o l\xednea de comandos. Esto est\xe1 descrito en\nla p\xe1gina ",(0,s.jsx)(n.a,{href:"/getting-started/calling-your-contract",children:"Ejecute su Contrato"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Puedes imprimir declaraciones de la depuraci\xf3n en su contrato. Estas apareceran en el nodo de Substrate ",(0,s.jsx)(n.code,{children:"stdout"}),". Esto est\xe1 descrito en esta p\xe1gina."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"c\xf3mo-imprimo-algo-en-la-consola-desde-el-runtime",children:"\xbfC\xf3mo imprimo algo en la consola desde el runtime?"}),"\n",(0,s.jsx)(n.p,{children:"Puedes elegir entre estos dos macros:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.rs/ink_env/4.0.0/ink_env/macro.debug_println.html",children:(0,s.jsx)(n.code,{children:"ink::env::debug_println!"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.rs/ink_env/4.0.0/ink_env/macro.debug_print.html",children:(0,s.jsx)(n.code,{children:"ink::env::debug_print!"})})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Tienes que hacer tres cosas para poder mostrar en la consola los mensajes de debug:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Permitir la feature ",(0,s.jsx)(n.code,{children:"pallet-contracts/unstable-interface"})," en el runtime."]}),(0,s.jsx)("br",{}),"\nPara ",(0,s.jsx)(n.code,{children:"substrate-contracts-node"})," esto esta hecho por defecto ",(0,s.jsx)(n.a,{href:"https://github.com/paritytech/substrate-contracts-node/blob/master/runtime/Cargo.toml",children:"aqu\xed"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Permitir la feature ",(0,s.jsx)(n.code,{children:"ink-debug"})," para el crate ",(0,s.jsx)(n.code,{children:"ink_env"}),"."]}),(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.code,{children:"cargo-contract"})," hace esto automaticamente para ti (para versiones ",(0,s.jsx)(n.code,{children:">= 0.13.0"}),"), excepto si compilas un contrato en modo ",(0,s.jsx)(n.code,{children:"--release"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Establecer el nivel de log de su nodo en ",(0,s.jsx)(n.code,{children:"runtime::contracts=debug"}),"."]}),(0,s.jsx)("br",{}),"\nPor ejemplo, para que aparezcan solo los errores y el output del debug en el ",(0,s.jsx)(n.code,{children:"substrate-contracts-node"}),":"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"substrate-contracts-node -lerror,runtime::contracts=debug\n"})}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,s.jsx)(n.p,{children:"El siguiente c\xf3digo muestra c\xf3mo imprimir declaraciones de depuraci\xf3n desde un mensaje o un constructor."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'#[ink(constructor)]\nfn new() -> Self {\n    ink::env::debug_println!("created new instance at {}", Self::env().block_number());\n    Self { }\n}\n\n#[ink(message)]\nfn print(&self) {\n   let caller = self.env().caller();\n   let message = ink_prelude::format!("got a call from {:?}", caller);\n   ink::env::debug_println!(&message);\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"El debug output no se imprime para transaciones!"}),(0,s.jsx)(n.p,{children:"Solo se imprime para llamadas RPC o tests off-chain."})]})]})}function u(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>c,M:()=>o});var s=t(11504);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);