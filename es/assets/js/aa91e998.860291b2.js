"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[186],{24168:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=n(74848),o=n(28453);const r={title:"C\xf3mo funciona \u2012 Substrate",slug:"/como-funciona",hide_title:!0},t="C\xf3mo funciona \u2012 Substrate",c={id:"intro/how-it-works",title:"C\xf3mo funciona \u2012 Substrate",description:"ink! es un lenguaje de programaci\xf3n para smart contracts; blockchains contruidas con el framework Substrate",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-5.x/intro/how-it-works.md",sourceDirName:"intro",slug:"/como-funciona",permalink:"/es/5.x/como-funciona",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/versioned_docs/version-5.x/intro/how-it-works.md",tags:[],version:"5.x",frontMatter:{title:"C\xf3mo funciona \u2012 Substrate",slug:"/como-funciona",hide_title:!0},sidebar:"reference",previous:{title:"Smart Contracts en Polkadot",permalink:"/es/5.x/smart-contracts-polkadot"},next:{title:"ink! vs. Solidity",permalink:"/es/5.x/ink-vs-solidity"}},i={},l=[{value:"\xbfC\xf3mo se vincula ink! con Substrate?",id:"c\xf3mo-se-vincula-ink-con-substrate",level:2},{value:"\xbfComo funciona el <code>pallet-contracts</code>?",id:"como-funciona-el-pallet-contracts",level:2},{value:"\xbfPor qu\xe9 incluir <code>pallet-contracts</code> en una parachain?",id:"por-qu\xe9-incluir-pallet-contracts-en-una-parachain",level:2},{value:"Caso de uso 1: Smart Contracts como &quot;ciudadanos de primera clase&quot;",id:"caso-de-uso-1-smart-contracts-como-ciudadanos-de-primera-clase",level:3},{value:"Caso de uso 2: Smart Contracts como &quot;ciudadanos de segunda clase&quot;",id:"caso-de-uso-2-smart-contracts-como-ciudadanos-de-segunda-clase",level:3},{value:"Caso de uso 3: Smart Contracts como primer paso en Polkadot o Kusama",id:"caso-de-uso-3-smart-contracts-como-primer-paso-en-polkadot-o-kusama",level:3},{value:"Smart Contracts vs. Parachains",id:"smart-contracts-vs-parachains",level:2}];function d(e){const a={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("img",{src:"/img/title/substrate.svg",className:"titlePic"}),"\n",(0,s.jsx)(a.h1,{id:"c\xf3mo-funciona--substrate",children:"C\xf3mo funciona \u2012 Substrate"}),"\n",(0,s.jsxs)(a.p,{children:["ink! es un lenguaje de programaci\xf3n para smart contracts; blockchains contruidas con ",(0,s.jsx)(a.a,{href:"http://substrate.io",children:"el framework Substrate"}),"\npueden elegir entre una serie de lenguajes para smart contracts cual quieren soportar.\nink! es uno de ellos. Es un lenguaje obstinado que hemos construido extendiendo el popular lenguaje de programaci\xf3n Rust con la funcionalidad necesaria para hacerlo compatible con smart contracts."]}),"\n",(0,s.jsx)(a.h2,{id:"c\xf3mo-se-vincula-ink-con-substrate",children:"\xbfC\xf3mo se vincula ink! con Substrate?"}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.a,{href:"https://substrate.io",children:"Substrate"})," es un framework para construir blockchains \u2013 esos pueden ser blockchains independientes o blockchains conectados a ",(0,s.jsx)(a.a,{href:"http://kusama.network",children:"Kusama"})," o ",(0,s.jsx)(a.a,{href:"http://polkadot.network",children:"Polkadot"}),", tambi\xe9n conocidos como ",(0,s.jsx)(a.em,{children:"parachains"}),". Substrate contiene un n\xfamero de m\xf3dulos, en terminolog\xeda Substrate estos son conocidos como ",(0,s.jsx)(a.em,{children:"pallets"}),". Substrate tiene un conjunto de pallets para muchos de los requisitos que las blockchain modernas suelen tener \u2013 staking, fungible tokens, non-fungible tokens, governance, etc."]}),"\n",(0,s.jsxs)(a.p,{children:["Substrate tambi\xe9n se contiene un m\xf3dulo para smart contracts, este m\xf3dulo se llama ",(0,s.jsx)(a.code,{children:"pallet-contracts"}),". Si una parachain ies desarrollada con Substrate se puede facilmente a\xf1adir la funcionalidad para smart contracts incluyendo este pallet."]}),"\n",(0,s.jsxs)(a.p,{children:["\xbfC\xf3mo entra ink! en juego aqu\xed? ink! es un lenguaje de programaci\xf3n, espec\xedficamente es un lenguaje espec\xedfico de dominio incrustado para el popular lenguaje de programaci\xf3n Rust. Esto quiere decir que puedes utilizar la sintaxis normal de Rust adem\xe1s de algunos detalles que hemos agregado para que el lenguaje sea adecuado para el mundo de los smart contracts.\nEl ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," toma estos contractos en ink! y los ejecuta de una manera segura. As\xed que en resumen: ",(0,s.jsxs)(a.em,{children:["con ink! puedes escribir smart contracts en Rust para blockchains construidos con Substrate que incluyen ",(0,s.jsx)(a.code,{children:"pallet-contracts"})]}),"."]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(15806).A+"",width:"2400",height:"1200"})}),"\n",(0,s.jsxs)(a.h2,{id:"como-funciona-el-pallet-contracts",children:["\xbfComo funciona el ",(0,s.jsx)(a.code,{children:"pallet-contracts"}),"?"]}),"\n",(0,s.jsxs)(a.p,{children:["Hemos dise\xf1ado intencionalmente el ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," de manera que este desvinculado del lenguaje que se utiliza para escribit smart contracts. El pallet es solo el entorno de ejecuci\xf3n y toma ficheros WebAssembly como input. Los smart contracts para este pallet tienen que ser compilados con una arquitectura WebAssembly (Wasm) como objetivo."]}),"\n",(0,s.jsx)(a.p,{children:"Para desarrolladores de contratos esto quiere decir que pueden utilizar ink! para escribir smart contracts, pero que tambi\xe9n pueden decidir hacerlo en otros lenguajes. Ahora mismo se puede elegir entre estos 3 lenguajes:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/paritytech/ink",children:"Parity's ink!"})," para Rust."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/patractlabs/ask",children:"ask!"})," para AssemblyScript."]}),"\n",(0,s.jsxs)(a.li,{children:["El compilador ",(0,s.jsx)(a.a,{href:"https://github.com/hyperledger-labs/solang",children:"Solang"})," para Solidity."]}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["No es dificil a\xf1adir nuevos lenguajes. S\nIt's not hard to add new languages. Solo se necesita un compilador para el lenguaje a WebAssembly, entonces es posible implementar una API para ",(0,s.jsx)(a.code,{children:"pallet-contracts"}),'. En este momento esta API consiste en entre 15-20 funciones para cualquier cosa que un smart contract puede necesitar: acceso al almacenamiento, funcionalidad criptogr\xe1fica, informaci\xf3n del entorno como n\xfameros de bloque, acceso a funciones para obtener n\xfameros aleatorios o auto-terminar el contrato, etc. No todas las funcionalidades tienen que ser implementadas en el lenguaje - el ink! "Hello, World!" necesita solo seis funciones API. El siguiente esquema representa esta relaci\xf3n:']}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(8092).A+"",width:"1200",height:"967"})}),"\n",(0,s.jsxs)(a.p,{children:["Creemos que este dise\xf1o est\xe1 m\xe1s preparado para el futuro que algunas arquitecturas que se encuentran en ecosistemas competidores.\nNo existe tight coupling entre el lenguaje y el entorno de ejecuci\xf3n. WebAssemblyes un estandar de la industria y una hoy en dia una m\xfaltitud de lenguajes de programaci\xf3n pueden ser compilados a WebAssembly. Si en por ejemplo diez a\xf1os, investigadores idean un lenguaje innovador para escribir smart contracts (o un subconjunto de un lenguaje existente) entonces mientras exista un compilador WebAssembly sera sencillo hacer que este lenguaje sea compatible con ",(0,s.jsx)(a.code,{children:"pallet-contracts"}),"."]}),"\n",(0,s.jsxs)(a.h2,{id:"por-qu\xe9-incluir-pallet-contracts-en-una-parachain",children:["\xbfPor qu\xe9 incluir ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," en una parachain?"]}),"\n",(0,s.jsx)(a.p,{children:"Existe un par de casos de uso para incluir funcionalidad de smart contracts en una parachain. Distinguimos tres grandes casos de uso."}),"\n",(0,s.jsx)(a.h3,{id:"caso-de-uso-1-smart-contracts-como-ciudadanos-de-primera-clase",children:'Caso de uso 1: Smart Contracts como "ciudadanos de primera clase"'}),"\n",(0,s.jsx)(a.p,{children:"El caso de uso m\xe1s obvio es una parachain que proporciona smart contracts como \u201cciudadanos de primera clase\u201d, lo que significa que los smart contracts son la propuesta central de valor de la cadena."}),"\n",(0,s.jsxs)(a.p,{children:["Estas cadena toman por lo general el off-the-shelf ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," y crean alguna innovaci\xf3n adicional encima. Ejemplos de esto son:"]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://astar.network",children:"Astar"}),": una parachain que ha construido una capa sobre ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," para que los desarolladores de contratos pueden obtener ingresos pasivos mientras sus contratos son utilizados."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://www.phala.network",children:"Phala"}),": una parachain que utiliza ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," en un entorno de ejecuci\xf3n confiable, permitiendo ejecuci\xf3nes de smart contract confidenciales e interoperabilidad."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://alephzero.org",children:"Aleph Zero"}),": utiliza el ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," en un contexto de zero-knowledge."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://www.t3rn.io",children:"t3rn"}),": utiliza ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," como un bloque de construcci\xf3n para permitir ejecuci\xf3n multi-chain para smart contracts."]}),"\n"]}),"\n",(0,s.jsx)(a.h3,{id:"caso-de-uso-2-smart-contracts-como-ciudadanos-de-segunda-clase",children:'Caso de uso 2: Smart Contracts como "ciudadanos de segunda clase"'}),"\n",(0,s.jsxs)(a.p,{children:["Existe otro no tan obvio caso de uso para ",(0,s.jsx)(a.code,{children:"pallet-contracts"}),": smart contracts como \u201cciudadanos de segunda clase\u201d en una cadena existente. Con esto queremos decir que la propuesta de valor central de la cadena no tiene nada que ver con los smart contracts, pero a\xfan as\xed los incluye como complemento."]}),"\n",(0,s.jsxs)(a.p,{children:["Proveemos una API (llamada ",(0,s.jsx)(a.a,{href:"https://use.ink/macros-attributes/chain-extension",children:"chain extensions"}),") con la que una parachain\npuede exponer ciertas partes de su l\xf3gica de negocio a los desarrolladores de smart contracts. A trav\xe9s de esto,, los desarrolladores de smart contracts pueden utilizar primitivas de la l\xf3gica de negocio de la cadena para construir una nueva aplicaci\xf3n sobre ella. Imagina por ejemplo una blockchain con un exchange descentralizado. Esta cadena, en su forma m\xe1s simple, tendr\xeda un libro de pedidos para realizar ofertas y demandas - no hay necesidad de tomar programas no confiables, turing completos ni programas del exterior. La parachain podria decidir exponer el libro de pedidos a traves del smart contract, dando a desarrolladores externos la opci\xf3n de construir nuevas aplicaciones que utilicen el libro de pedidos. Por ejemplo, para For example, para cargar algoritmos de trading como smart contracts en la cadena."]}),"\n",(0,s.jsx)(a.p,{children:"Los smart contracts aqui son una oportunidad para aumentar la participaci\xf3n del usuario e impulsar el uso del token nativo de la cadena. Y la facturaci\xf3n por utilizar la cadena ya viene integrada con el pallet - los usuarios tienen que pagar gas fees para la ejecuci\xf3n de sus smart contracts."}),"\n",(0,s.jsx)(a.h3,{id:"caso-de-uso-3-smart-contracts-como-primer-paso-en-polkadot-o-kusama",children:"Caso de uso 3: Smart Contracts como primer paso en Polkadot o Kusama"}),"\n",(0,s.jsxs)(a.p,{children:["Un tercer gran caso de uso del ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," es para crear un prototipo de una idea como una prueba de concepto en forma de smart contract antes de arrendar un dedicado parachain slot en Polkadot o Kusama."]}),"\n",(0,s.jsx)(a.p,{children:"El tiempo que cuesta desarrollar y desplegar un smart contract es m\xe1s corto que la onboarding story para una parachain. Se puede desplegar primero un smart contract como prueba de concepto, ver si gana tracci\xf3n y la idea resiste al mundo real. Solo posteriormente, una vez que sea necesario, por ejemplo tarifas de transacci\xf3n m\xe1s baratas, una ejecuci\xf3n m\xe1s eficiente o un mecanismo de governance para la comunidad, el smart contract podr\xeda migrarse a un runtime de una parachain dedicads con su propio slot. Los contratos ink! y los runtime de Substrate est\xe1n ambos escritos en Rust y comparte primitivas similar, esto permite un camino claro para pasar de un smart contract a un runtime propio. Los desarrolladores pueden reutilizar largaas partes del c\xf3digo, sus tests, asi como su frontend y su c\xf3digo cliente."}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(27958).A+"",width:"2800",height:"1575"})}),"\n",(0,s.jsx)(a.h2,{id:"smart-contracts-vs-parachains",children:"Smart Contracts vs. Parachains"}),"\n",(0,s.jsx)(a.p,{children:"Una de las primeras preguntas que normalmente recibimos cuando alguien empieza a aprender Substrate, Polkadot, o Kusama es cuendo desarrollar su propia parachain vs. cuando desarrollar un smart contract."}),"\n",(0,s.jsxs)(a.p,{children:["La distinci\xf3n aqu\xed es que en el contexto de Polkadot y Kusama es que una parachain alquila un slot desde un par de meses hasta dos a\xf1os. El trato con un contrato de arrendamiento es que el parachain obtiene un slot fijo para ejecutar su l\xf3gica de negocio (t\xedpicamente referido como su ",(0,s.jsx)(a.em,{children:"state transition function"}),") y puede persistir su estado modificado en un bloque. En terminolog\xeda Substrate esta state transition function se conoce como el ",(0,s.jsx)(a.em,{children:"runtime"})," de la cadena."]}),"\n",(0,s.jsxs)(a.p,{children:["La distinci\xf3n con otros ecosistemas aqu\xed es que, en el contexto de Polkadot, parachains y smart contracts existen en distintas capas del stack: ",(0,s.jsx)(a.em,{children:"smart contracts existen sobre las parachains"}),". Las parachains normalmente se describen como layer-1 blockchains \u2012 exceptuando que no tienen que contruir su propia seguridad, son actualizables e interoperables."]}),"\n",(0,s.jsx)(a.p,{children:"Es de destacar que la state transition function de una parachain no se valida m\xe1s \u2012 depende de la parachain el como utilizar su tiempo del slot. La parachain ya pre paga por su slot cuando gana la subasta del slot en Polkadot o Kusama. Esto significa que la parachain puede construir su propio (blockchain) mundo! Por ejemplo, puede decidir como las fees de las transacciones se pagan - o incluso si las fees de las transacciones se tienen que pagar. Estas opciones son cruciales cuando se construyen modelos comerciales nuevos o m\xe1s f\xe1ciles de usar. Otros factores distintivos entre parachains que observamos en la naturaleza son diferencias en c\xf3mo funciona la gobernanza o la criptoeconom\xeda. A\xfan asi existen algunas restricciones en como una parachain pueden construir su propio mundo. Al igual que la f\xedsica en el mundo real, tienen que adherirse a ciertas reglas b\xe1sicas. Para Polkadot y Kusama esto es por ejemplo el algoritmo de consenso para la Relay Chain y su comunicaci\xf3n con la parachain. De esas reglas b\xe1sicas surgen las ventajas de Polkadot y Kusama. Ventajas como la seguridad compartida antes mencionada, la comunicaci\xf3n entre cadenas o el tiempo de ejecuci\xf3n garantizado."}),"\n",(0,s.jsxs)(a.p,{children:["Por otro lado para los smart contracts, una parachain existente tiene que incluir el",(0,s.jsx)(a.code,{children:"pallet-contracts"})," para que los usuarios puedan desplegar smart contracts. El smart contract desplegado es siempre c\xf3digo no confiable. Cualquiera (o cualquier programa) que tiene tokens de la cadean puede subir un smart contract sin necesidad de pedir permiso.Los Smart contracts permiten deployments ",(0,s.jsx)(a.em,{children:"permisionless"})," de programas ",(0,s.jsx)(a.em,{children:"untrusted"})," en la blockchain. El ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," tiene que asumir que estos programas son antag\xf3nicos, tiene que establecer una serie de pilares de seguridad para garantizar que el contrato no pueda, por ejemplo detener la cadena o provocar la corrupci\xf3n estatal de otros contratos. Para el ",(0,s.jsx)(a.code,{children:"pallet-contracts"})," estos pilares de seguridad incluyen mecanismos como la medici\xf3n de gas o dep\xf3sitos para almacenar datos en la cadena."]}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.em,{children:"Para reafirmar esta importante distinci\xf3n: desarrollar el runtime de una parachain runtime es diferente a desarrollar un smart contract \u2012 el smart contract existe encima de un parachain"}),"."]}),"\n",(0,s.jsx)(a.p,{children:"La ventaja es que con una parachain uno tiene la libertad de decidir en (pr\xe1cticamente) todas las reglas que hacen la parachain. Con un smart contract uno est\xe1 limitado por lo que permite la cadena y los pilares de seguridad que necesariamente tienen que estar en el lugar. Un smart contract nunca puede ser tan r\xe1pido como un pallet nativo contruido en el runtime de una parachain \u2012 hay demasiada l\xf3gica en el medio.\nPor otro lado un smart contract tiene menos fricci\xf3n para desarrollarlo y desplegarlo. Los desarrolladores no tienen que ocuparse de la gobernanza, la criptoeconom\xeda, etc. Uno solo necesita algunos tokens y puede seguir su camino feliz implementando un contrato inteligente. Es tan simple como eso."}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(31102).A+"",width:"1031",height:"350"})})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8092:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/ink-substrate-3f38685b5133ce12796ff94e96a2d75b.png"},31102:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/smart-contract-vs-parachain-4aedb0bd99fee087279e96b4a2462d90.png"},27958:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/ink-gateway-f45ef65bb203393f5fd975fd4c3e10f5.jpg"},15806:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/ink-pallet-contracts-9fb60b4f162b48bbc8cd59608383f638.png"},28453:(e,a,n)=>{n.d(a,{R:()=>t,x:()=>c});var s=n(96540);const o={},r=s.createContext(o);function t(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);