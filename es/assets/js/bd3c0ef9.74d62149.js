"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[9686],{56368:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=s(17624),t=s(4552);const o={title:"tx Helpers",hide_title:!0,description:"Helper functions for checking the state of a transaction."},a="tx Helpers",r={id:"frontend/utils/tx-utils",title:"tx Helpers",description:"Helper functions for checking the state of a transaction.",source:"@site/docs/frontend/utils/tx-utils.md",sourceDirName:"frontend/utils",slug:"/frontend/utils/tx-utils",permalink:"/es/frontend/utils/tx-utils",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/utils/tx-utils.md",tags:[],version:"current",frontMatter:{title:"tx Helpers",hide_title:!0,description:"Helper functions for checking the state of a transaction."},sidebar:"reference",previous:{title:"\u26cf\ufe0f Pick Helpers",permalink:"/es/frontend/utils/pick"},next:{title:"Types",permalink:"/es/frontend/utils/types"}},l={},c=[{value:"shouldDisable",id:"shoulddisable",level:2},{value:"shouldDisableStrict",id:"shoulddisablestrict",level:2},{value:"hasAny",id:"hasany",level:2},{value:"isPendingSignature",id:"ispendingsignature",level:2},{value:"isNone",id:"isnone",level:2},{value:"isDryRun",id:"isdryrun",level:2},{value:"isErrored",id:"iserrored",level:2},{value:"isFuture",id:"isfuture",level:2},{value:"isReady",id:"isready",level:2},{value:"isBroadcast",id:"isbroadcast",level:2},{value:"isInBlock",id:"isinblock",level:2},{value:"isInvalid",id:"isinvalid",level:2},{value:"isUsurped",id:"isusurped",level:2},{value:"isDropped",id:"isdropped",level:2},{value:"isFinalized",id:"isfinalized",level:2},{value:"isFinalityTimeout",id:"isfinalitytimeout",level:2},{value:"isRetracted",id:"isretracted",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"tx-helpers",children:"tx Helpers"}),"\n",(0,i.jsxs)(n.p,{children:["There are a number of helper functions to check the status of a transaction. See\n",(0,i.jsx)(n.a,{href:"/frontend/react/hooks/contracts/use-tx#transaction-state",children:"useTx"})," for a full list of\nTransaction state values and descriptions."]}),"\n",(0,i.jsx)(n.h2,{id:"shoulddisable",children:"shouldDisable"}),"\n",(0,i.jsxs)(n.p,{children:["This function that returns ",(0,i.jsx)(n.code,{children:"true"})," if a transaction state is ",(0,i.jsx)(n.code,{children:"DryRun"}),", ",(0,i.jsx)(n.code,{children:"PendingSignature"}),",\nor ",(0,i.jsx)(n.code,{children:"Broadcast"}),". It is good practice to disable a button that triggers a transaction unless\nit has fully resolved. In a successful transaction, ",(0,i.jsx)(n.code,{children:"Broadcast"})," state comes immediately\nbefore ",(0,i.jsx)(n.code,{children:"InBlock"}),", which is when contracts emit events and the transaction is most likely\nto succeed. See ",(0,i.jsx)(n.code,{children:"shouldDisableStrict"})," if you want to disable a button until it is\n",(0,i.jsx)(n.code,{children:"Finalized"}),", which may be more appropriate for high stake dApps."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { shouldDisable } from 'useink';\n\nexport const Flipper = (contract) => {\n    const flipTx = useTx(contract, 'flip');\n\n    return (\n        <button\n            onClick={flipTx.signAndSend}\n            disabled={shouldDisable(flipTx)}\n        >\n            {shouldDisable(flipTx) ? 'Flipping' : 'Flip!'}\n        </button>\n    )\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"shoulddisablestrict",children:"shouldDisableStrict"}),"\n",(0,i.jsxs)(n.p,{children:["This function that returns ",(0,i.jsx)(n.code,{children:"true"})," if a transaction state is ",(0,i.jsx)(n.code,{children:"DryRun"}),", ",(0,i.jsx)(n.code,{children:"PendingSignature"}),",\n",(0,i.jsx)(n.code,{children:"Broadcast"}),", or ",(0,i.jsx)(n.code,{children:"InBlock"}),". It is good practice to disable a button that triggers a\ntransaction unless it has fully resolved."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { shouldDisableStrict } from 'useink';\n\n//... React code omitted\n<button\n    onClick={flipTx.signAndSend}\n    disabled={shouldDisableStrict(flipTx)}\n>\n    {shouldDisableStrict(flipTx) ? 'Flipping' : 'Flip!'}\n</button>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"hasany",children:"hasAny"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status has any of the arguments you pass in. Arguments must be of type ",(0,i.jsx)(n.code,{children:"Status"}),";"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { hasAny } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(hasAny(['Broadcast', 'Finalized']));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ispendingsignature",children:"isPendingSignature"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"PendingSignature"}),". ",(0,i.jsx)(n.code,{children:"PendingSignature"})," is\nset when you call ",(0,i.jsx)(n.code,{children:"signAndSend()"})," on a transaction, which opens up a browser wallet\nextension modal for a user to sign. Once the transaction is signed the state will change\nto ",(0,i.jsx)(n.code,{children:"Broadcast"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { isPendingSignature } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\nflipTx.signAndSend();\n\nconsole.log(isPendingSignature(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isnone",children:"isNone"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isNone } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isNone(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isdryrun",children:"isDryRun"}),"\n",(0,i.jsxs)(n.p,{children:["Returns ",(0,i.jsx)(n.code,{children:"true"})," if the transaction status is ",(0,i.jsx)(n.code,{children:"DryRun"}),". ",(0,i.jsx)(n.code,{children:"DryRun"})," occurs immediately before a\ntransaction is sent to verify if it will succeed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { isDryRun } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isDryRun(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"iserrored",children:"isErrored"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Errored"}),", which means that there was an\nerror in JavaScript somewhere."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isErrored } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isErrored(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isfuture",children:"isFuture"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Future"}),", which means that the transaction\nis moving in to the transaction pool."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isFuture } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isFuture(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isready",children:"isReady"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Ready"}),", which means that the transaction\nis ready to be entered in to the transaction pool."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isReady } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isFuture(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isbroadcast",children:"isBroadcast"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Broadcast"}),". This is the point when\nevents are emitted."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isBroadcast } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isBroadcast(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isinblock",children:"isInBlock"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"InBlock"}),". At this point it is very likely\nthat the transaction will succeed. Most dApps can optimistically assume that the\ntransaction is a success, but you may want to wait until ",(0,i.jsx)(n.code,{children:"Finalized"})," stutus if you are\nbuilding a high stakes dApp with monetary value so you can offer 100% guarantee that a\ntransaction did succeed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isInBlock } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isInBlock(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isinvalid",children:"isInvalid"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Invalid"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isInvalid } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isInvalid(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isusurped",children:"isUsurped"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Usurped"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isUsurped } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isUsurped(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isdropped",children:"isDropped"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Usurped"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isDropped } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isDropped(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isfinalized",children:"isFinalized"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Finalized"}),". This status guarantees that a\ntransaction completed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isFinalized } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isFinalized(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isfinalitytimeout",children:"isFinalityTimeout"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"FinalityTimeout"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isFinalityTimeout } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isFinalityTimeout(flipTx));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"isretracted",children:"isRetracted"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a boolean if the transaction status is ",(0,i.jsx)(n.code,{children:"Retracted"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { isRetracted } from 'useink';\n\n//... React code omitted\nconst flipTx = useTx(contract, 'flip');\n\nconsole.log(isRetracted(flipTx));\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},4552:(e,n,s)=>{s.d(n,{I:()=>r,M:()=>a});var i=s(11504);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);