"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[4336],{85684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var s=n(17624),o=n(4552);const r={title:"useEventSubscription",description:"React hook for subscribing to events for a specific contract."},c="useEventSubscription",i={id:"frontend/react/hooks/contracts/use-event-subscription",title:"useEventSubscription",description:"React hook for subscribing to events for a specific contract.",source:"@site/docs/frontend/react/hooks/contracts/use-event-subscription.md",sourceDirName:"frontend/react/hooks/contracts",slug:"/frontend/react/hooks/contracts/use-event-subscription",permalink:"/es/frontend/react/hooks/contracts/use-event-subscription",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/react/hooks/contracts/use-event-subscription.md",tags:[],version:"current",frontMatter:{title:"useEventSubscription",description:"React hook for subscribing to events for a specific contract."},sidebar:"reference",previous:{title:"useDryRun",permalink:"/es/frontend/react/hooks/contracts/use-dry-run"},next:{title:"useEvents",permalink:"/es/frontend/react/hooks/contracts/use-events"}},a={},u=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"useeventsubscription",children:"useEventSubscription"}),"\n",(0,s.jsxs)(t.p,{children:["A hook for subscribing to events for a specific contract. This hook should only be called\nonce. Only events emitted after the subscription has been established\nwill be available. See ",(0,s.jsx)(t.a,{href:"/frontend/configuration#configprops",children:"configuration"})," to learn more\nabout setting dApp defaults for how long events should live in state before being removed."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { useEventSubscription, useContract } from 'useink'\nimport metadata from 'metadata.json'\n\nconst CONTRACT_ADDRESS = '..'\n\nexport const MyContractView: React.FC = () => {\n  const contract = useContract(CONTRACT_ADDRESS, metadata)\n  useEventSubscription(contract) // subscribe to events for a contract one time\n  // call useEvents(contract?.address) to fetch the events from state\n\n  return null\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"void\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4552:(e,t,n)=>{n.d(t,{I:()=>i,M:()=>c});var s=n(11504);const o={},r=s.createContext(o);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);