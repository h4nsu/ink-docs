"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[56],{4903:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=t(17624),o=t(4552);const i={title:"Getting Started",slug:"/frontend/chains",description:"A collection of hundreds of Chain configurations"},a="Getting Started",r={id:"frontend/chains/getting-started",title:"Getting Started",description:"A collection of hundreds of Chain configurations",source:"@site/docs/frontend/chains/getting-started.mdx",sourceDirName:"frontend/chains",slug:"/frontend/chains",permalink:"/es/frontend/chains",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/chains/getting-started.mdx",tags:[],version:"current",frontMatter:{title:"Getting Started",slug:"/frontend/chains",description:"A collection of hundreds of Chain configurations"},sidebar:"reference",previous:{title:"chainTokenSymbol",permalink:"/es/frontend/core/substrate/chain-token-symbol"},next:{title:"Chain Configurations",permalink:"/es/frontend/chains/configurations"}},c={},l=[{value:"Installation",id:"installation",level:2},{value:"Configure tsconfig.json",id:"configure-tsconfigjson",level:2},{value:"Chain Type Definition",id:"chain-type-definition",level:2},{value:"Example: RococoContractsTestnet",id:"example-rocococontractstestnet",level:3},{value:"Example: Astar",id:"example-astar",level:3}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.M)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"useink/chains"})," is an extension of ",(0,s.jsx)(e.strong,{children:"useink"})," that provides hundreds of chain\nconfigurations. Configurations are necessary to set up core ",(0,s.jsx)(e.strong,{children:"useink"})," React hooks and\ndisplay user-facing content. They contain RPC urls, links to block explorers, official\nwebsites, and metadata QR codes, and contain native token information, and more."]}),"\n",(0,s.jsxs)(e.p,{children:["It is important to note that most of these chains do not implement\n",(0,s.jsx)(e.a,{href:"https://paritytech.github.io/substrate/master/pallet_contracts/pallet/struct.Pallet.html",children:"pallet-contracts"}),",\nand therefore do not support ink! contracts, but many of the features in ",(0,s.jsx)(e.strong,{children:"useink"})," are\ncompatible with all of these chains. We have added them here for convenience. In addition,\nmany chains are in the process of adding pallet-contracts as they adopt the ",(0,s.jsx)(e.a,{href:"https://www.rob.tech/blog/hybrid-chains/",children:"hybrid chain\ndesign"}),", so we expect more and more\ncompatibility with the ",(0,s.jsx)(e.strong,{children:"useink"})," library in the near future."]}),"\n",(0,s.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(e.p,{children:["You must first ",(0,s.jsx)(e.a,{href:"/frontend/getting-started#installation",children:"install useink"}),"."]}),"\n",(0,s.jsx)(e.h2,{id:"configure-tsconfigjson",children:"Configure tsconfig.json"}),"\n",(0,s.jsxs)(e.p,{children:["Set ",(0,s.jsx)(e.code,{children:"moduleResolution"})," to ",(0,s.jsx)(e.code,{children:"nodenext"})," or ",(0,s.jsx)(e.code,{children:"bundler"})," inside of your ",(0,s.jsx)(e.code,{children:"tsconfig.json"}),". This\nfeature allows your application to discover the ",(0,s.jsx)(e.code,{children:"useink/chains"})," import paths defined in\nthe ",(0,s.jsx)(e.strong,{children:"useink"})," ",(0,s.jsx)(e.code,{children:"package.json"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "moduleResolution": "nodenext", // or `bundler`\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["You can now import any of the chain configurations in ",(0,s.jsx)(e.code,{children:"useink/chains"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// Example\nimport { RococoContractsTestnet, ShibuyaTestnet } from 'useink/chains';\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/frontend/getting-started#configuration",children:"See useink Configuration"})," to learn how these are\nused in a React app built with ",(0,s.jsx)(e.strong,{children:"useink"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/frontend/chains/configurations",children:"See Chain Configurations"})," for a list of all available configurations."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"chain-type-definition",children:"Chain Type Definition"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"interface Chain {\n  id: ChainId; // See https://use.ink/frontend/chains/chain-id for a list of all possible values.\n  name: string;\n  account: '*25519' | 'secp256k1' | 'Sr25519';\n  subscanUrl?: string;\n  overrideNativeTokenId?: string;\n  chainspecQrUrl?: string;\n  latestMetadataQrUrl?: string;\n  rpcs: readonly `ws://${string}` | `wss://${string}`[];\n  coingeckoId?: string | null;\n  paraId?: number;\n  relay?: {\n    id: string;\n  };\n  balanceModuleConfigs?: {\n    [k: string]: {\n      disable?: boolean;\n      tokens?: readonly (Token | TokenAsset)[];\n    };\n  };\n}\n\ninterface Token {\n  symbol: string;\n  decimals: number;\n  // existentialDeposit is the minimum amount an account must hold to stay alive.\n  // Balances held below this amount will be removed from storage\n  existentialDeposit: string;\n  // onChainId is the ID for a token in the pallet\n  onChainId: string | number;\n  coingeckoId?: string;\n}\n\ninterface TokenAsset {\n  assetId: string | number;\n  symbol: string;\n  coingeckoId?: string;\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"example-rocococontractstestnet",children:"Example: RococoContractsTestnet"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"const RococoContractsTestnet: Chain = {\n  id: 'rococo-contracts-testnet',\n  name: 'Contracts',\n  account: '*25519',\n  rpcs: ['wss://rococo-contracts-rpc.polkadot.io'],\n  paraId: 1002,\n  relay: { id: 'rococo-testnet' },\n};\n"})}),"\n",(0,s.jsx)(e.h3,{id:"example-astar",children:"Example: Astar"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"export const Astar: Chain = {\n  id: 'astar',\n  name: 'Astar',\n  account: '*25519',\n  subscanUrl: 'https://astar.subscan.io/',\n  chainspecQrUrl: 'https://metadata.novasama.io/qr/astar_specs.png',\n  latestMetadataQrUrl:\n    'https://metadata.novasama.io/qr/astar_metadata_latest.apng',\n  rpcs: [\n    'wss://rpc.astar.network',\n    'wss://astar.public.blastapi.io',\n    'wss://astar-rpc.dwellir.com',\n    'wss://astar.api.onfinality.io/public-ws',\n    'wss://astar.public.curie.radiumblock.co/ws',\n    'wss://public-rpc.pinknode.io/astar',\n    'wss://1rpc.io/astr',\n  ],\n  paraId: 2006,\n  relay: { id: 'polkadot' },\n  balanceModuleConfigs: {\n    'substrate-assets': {\n      tokens: [\n        { assetId: '4294969280', symbol: 'USDT', coingeckoId: 'tether' },\n        {\n          assetId: '18446744073709551616',\n          symbol: 'ACA',\n          coingeckoId: 'acala',\n        },\n        {\n          assetId: '18446744073709551617',\n          symbol: 'AUSD',\n          coingeckoId: 'acala-dollar',\n        },\n        {\n          assetId: '18446744073709551618',\n          symbol: 'LDOT',\n          coingeckoId: 'liquid-staking-dot',\n        },\n        {\n          assetId: '18446744073709551619',\n          symbol: 'GLMR',\n          coingeckoId: 'moonbeam',\n        },\n        {\n          assetId: '18446744073709551620',\n          symbol: 'IBTC',\n          coingeckoId: 'interbtc',\n        },\n        {\n          assetId: '18446744073709551621',\n          symbol: 'INTR',\n          coingeckoId: 'interlay',\n        },\n        { assetId: '18446744073709551622', symbol: 'PHA', coingeckoId: 'pha' },\n        {\n          assetId: '18446744073709551623',\n          symbol: 'BNC',\n          coingeckoId: 'bifrost-native-coin',\n        },\n        { assetId: '18446744073709551624', symbol: 'VDOT' },\n        { assetId: '18446744073709551625', symbol: 'CLV' },\n        { assetId: '18446744073709551626', symbol: 'VSDOT' },\n        {\n          assetId: '18446744073709551627',\n          symbol: 'RING',\n          coingeckoId: 'darwinia-network-native-token',\n        },\n        {\n          assetId: '18446744073709551628',\n          symbol: 'EQ',\n          coingeckoId: 'equilibrium-token',\n        },\n        { assetId: '18446744073709551629', symbol: 'EQD' },\n        {\n          assetId: '340282366920938463463374607431768211455',\n          symbol: 'DOT',\n          coingeckoId: 'polkadot',\n        },\n      ],\n    },\n  },\n}\n"})})]})}function h(n={}){const{wrapper:e}={...(0,o.M)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},4552:(n,e,t)=>{t.d(e,{I:()=>r,M:()=>a});var s=t(11504);const o={},i=s.createContext(o);function a(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);