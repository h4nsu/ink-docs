"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[271],{75997:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(74848),a=t(28453);const o={title:"Mutando Valores del Storage",slug:"/basics/mutando-valores-del-storage",hide_title:!0},r="Mutando Valores del Storage",l={id:"basics/mutating-values",title:"Mutando Valores del Storage",description:"Es hora de modificar el storage!",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/basics/mutating-values.md",sourceDirName:"basics",slug:"/basics/mutando-valores-del-storage",permalink:"/es/basics/mutando-valores-del-storage",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/basics/mutating-values.md",tags:[],version:"current",frontMatter:{title:"Mutando Valores del Storage",slug:"/basics/mutando-valores-del-storage",hide_title:!0},sidebar:"reference",previous:{title:"Leer Valores del Storage",permalink:"/es/basics/leer-valores-del-storage"},next:{title:"Eventos",permalink:"/es/basics/eventos"}},i={},c=[{value:"Funciones Mutables e Inmutables",id:"funciones-mutables-e-inmutables",level:2}];function d(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("img",{src:"/img/title/storage-mutating.svg",className:"titlePic"}),"\n",(0,n.jsx)(s.h1,{id:"mutando-valores-del-storage",children:"Mutando Valores del Storage"}),"\n",(0,n.jsx)(s.p,{children:"Es hora de modificar el storage!"}),"\n",(0,n.jsx)(s.h2,{id:"funciones-mutables-e-inmutables",children:"Funciones Mutables e Inmutables"}),"\n",(0,n.jsxs)(s.p,{children:["Te habras dado cuenta que la funci\xf3n plantilla incluye ",(0,n.jsx)(s.code,{children:"self"})," como el primer par\xe1metro de las funciones del contrato.\nEs a trav\xe9s de ",(0,n.jsx)(s.code,{children:"self"})," que tienes acceso a todas las funciones del contrato y los elementos almacenados."]}),"\n",(0,n.jsxs)(s.p,{children:["Si simplemente estas ",(0,n.jsx)(s.em,{children:"leyendo"})," del storage del contrato, solamente tiene que pasar ",(0,n.jsx)(s.code,{children:"&self"}),". Pero si quieres\n",(0,n.jsx)(s.em,{children:"modificar"})," elementos del storage, tienes que marcarlo explicitamente como mutable, ",(0,n.jsx)(s.code,{children:"&mut self"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-rust",children:"impl MyContract {\n    #[ink(message)]\n    pub fn my_getter(&self) -> u32 {\n        self.my_number\n    }\n\n    #[ink(message)]\n    pub fn my_setter(&mut self, new_value: u32) {\n        self.my_number = new_value;\n    }\n}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>l});var n=t(96540);const a={},o=n.createContext(a);function r(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);