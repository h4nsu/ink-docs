"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[732],{66364:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=t(17624),n=t(4552);const a={title:"Por qu\xe9 Rust para Smart Contracts?",slug:"/por-que-rust-para-smart-contracts",hide_title:!0},o="Por qu\xe9 Rust para Smart Contracts?",i={id:"intro/why-rust",title:"Por qu\xe9 Rust para Smart Contracts?",description:"ink! no busca crear su nuevo lenguaje de programaci\u0153, sino que busca adaptarse a un subconjunto de rust para poder cumplir su prop\xf3sito. Si esto no es suficiente para convencerte, aqu\xed van otras buenas razones:",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/intro/why-rust.md",sourceDirName:"intro",slug:"/por-que-rust-para-smart-contracts",permalink:"/es/por-que-rust-para-smart-contracts",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/intro/why-rust.md",tags:[],version:"current",frontMatter:{title:"Por qu\xe9 Rust para Smart Contracts?",slug:"/por-que-rust-para-smart-contracts",hide_title:!0},sidebar:"reference",previous:{title:"Introducci\xf3n",permalink:"/es/"},next:{title:"Por qu\xe9 WebAssembly para Smart Contracts?",permalink:"/es/por-que-webassembly-para-smart-contracts"}},c={},u=[];function l(e){const s={h1:"h1",li:"li",p:"p",ul:"ul",...(0,n.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("img",{src:"/img/title/rust.svg",className:"titlePic"}),"\n",(0,r.jsx)(s.h1,{id:"por-qu\xe9-rust-para-smart-contracts",children:"Por qu\xe9 Rust para Smart Contracts?"}),"\n",(0,r.jsx)(s.p,{children:"ink! no busca crear su nuevo lenguaje de programaci\u0153, sino que busca adaptarse a un subconjunto de rust para poder cumplir su prop\xf3sito. Si esto no es suficiente para convencerte, aqu\xed van otras buenas razones:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"Rust es un lenguaje ideal para smart contracts:"})," Es type safe, memory safe, y libre de comportamientos indefinidos. Genera peque\xf1os binarios porque no incluye un extra bloat, como garbage collector, y optimizaciones avanzadas y un \xe1rbol que elimina el c\xf3digo muerto. A trav\xe9s de indicadores del compilador, Rust puede proteger autom\xe1ticamente contra el overflow de enteros."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"Ecosistema de Rust:"})," Obtiene de todo el soporte disponible para el ecosistema de Rust de forma gratuita. A medida que se desarrolla el lenguaje, ink! obtendr\xe1 autom\xe1ticamente acceso a nuevas caracter\xedsticas y funcionalidades, mejorando la forma en que se podran escribir smart contracts en el futuro."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"Herramientas:"})," Dado que ink! sigue los est\xe1ndares de Rust, herramientas como rustfmt, clippy y rust-analyzer funcionen directamente. Lo mismo sucede con sismtemas de resaltado de sint\xe1xis o formateo de c\xf3digo en los editores de texto moderno. Adem\xe1s, Rust tiene test y benchmark incorporados directamente en el runner."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"No overhead:"})," Runtime m\xednimo."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"Seguro & Eficiente:"})," Cero costo y abstraciones seguros."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"Productivo:"})," Cargo + Ecosistema de ",(0,r.jsx)("a",{href:"https://crates.io",children:"crates.io"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"1st class Wasm:"})," Rust provee soporte primario para WebAssembly."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)("span",{class:"highlight",children:"Tama\xf1o compacto:"})," El tama\xf1o es importante en los blockchains donde existen restriciones de espacio. El compilador de Rust es ideal en este sentido, dado que reordena los campos de struct para poder hacer cada tipo lo m\xe1s compacto posible. Es por eso que las estructuras de datos en Rust son muy compactas, hasta m\xe1s compactas que en C en ciertos casos."]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,n.M)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4552:(e,s,t)=>{t.d(s,{I:()=>i,M:()=>o});var r=t(11504);const n={},a=r.createContext(n);function o(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);