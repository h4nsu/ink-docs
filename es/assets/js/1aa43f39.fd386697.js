"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[3388],{26448:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var n=a(17624),r=a(4552);const o={title:"Por qu\xe9 WebAssembly para Smart Contracts?",slug:"/por-que-webassembly-para-smart-contracts",hide_title:!0},i="Por qu\xe9 WebAssembly para Smart Contracts?",t={id:"intro/why-webassembly",title:"Por qu\xe9 WebAssembly para Smart Contracts?",description:"Tomamos la decisi\xf3n de utilizar WebAssembly como nuestra arquitectura para ink!.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/intro/why-webassembly.md",sourceDirName:"intro",slug:"/por-que-webassembly-para-smart-contracts",permalink:"/es/por-que-webassembly-para-smart-contracts",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/intro/why-webassembly.md",tags:[],version:"current",frontMatter:{title:"Por qu\xe9 WebAssembly para Smart Contracts?",slug:"/por-que-webassembly-para-smart-contracts",hide_title:!0},sidebar:"reference",previous:{title:"Por qu\xe9 Rust para Smart Contracts?",permalink:"/es/por-que-rust-para-smart-contracts"},next:{title:"Smart Contracts en Polkadot",permalink:"/es/smart-contracts-polkadot"}},l={},c=[];function d(e){const s={h1:"h1",li:"li",p:"p",ul:"ul",...(0,r.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("img",{src:"/img/title/wasm.svg",className:"titlePic"}),"\n",(0,n.jsx)(s.h1,{id:"por-qu\xe9-webassembly-para-smart-contracts",children:"Por qu\xe9 WebAssembly para Smart Contracts?"}),"\n",(0,n.jsx)(s.p,{children:"Tomamos la decisi\xf3n de utilizar WebAssembly como nuestra arquitectura para ink!.\nEstas fueron las razones por las que tomamos dicha decisi\xf3n:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Alta performance: "}),"Wasm es de alta performance \u2014 est\xe1 desarrollados para estar lo m\xe1s pr\xf3ximo posible al c\xf3digo nativo de la computadora, a\xfan manteniendo una plataforma independiente."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Tama\xf1o compacto: "}),"Facilita un binario compacto que puede enviarse a trav\xe9s de internet a dispositivos con, potencialmente, conexiones lentas.\nEsto lo hace ideal para sistemas con restricciones de espacio, como los Blockchains."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"M\xe1quina Virtual (VM) General & bytecode: "}),"\nFue desarrollado para que el c\xf3digo pueda ser deployado en cualquier browser con el mismo resultado.\nContrario a EVM que no fue desarrollado para un caso particular, Wasm tiene el befecio de contar con una gran cantidad de herramientas disponibles y de una gran canditat de compa\xf1\xedas que dedican recursos en el desarrollo futuro de Wasm."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Eficiente ejecuci\xf3n JIT: "}),"\nSporte de operaci\xf3nes de n\xfameros enteros de 64 and 32-bit mapeados 1-1 con instrucciones de CPU."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Minimal\xedstico: "})," Especificaci\xf3nes formales que entran en una \xfanica p\xe1gina."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Ejecuci\xf3n determin\xedstica: "}),"\nWasm se vuelve f\xe1cilmente deterministico removiendo operaciones con floating points, que son necesarios para algor\xedtmos de consenso."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Open Standards > Soluciones Customizadas: "}),"\nWasm es un est\xe1ndard para navegadores Web desarrollado por el grupo W3C, con compa\xf1\xedas de la talla de Google, Mozilla y otros.\nHan habido varios a\xf1os de desarrollo puestos en Wasm, tanto para el compilador como para la estandarizaci\xf3n."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Muchos lenguajes Disponibles: "})," Wasm expande la familia de lenguajes disponibles para desarrolladores de smart contracts, incluyendo Rust, C/C++, C#, Typescript, Haxe, y Kotlin. Esto significa que se pueden escribir smart contracts con cualquier lenguaje que te sea familiar. De todas formas, la recomendaci\xf3n parcial es usar Rust, dado que tiene menos complejidad en su runtime, y goza de propiedades que lo hacen extremadamente seguro."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)("span",{class:"highlight",children:"De memoria-segura, encapsulado (sandboxed), y de plataforma independiente."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Sporte LLVM: "}),"\nSportado por el projecto de infrastructura del compilador LLVM, lo que significa que Wasm se beneficia de m\xe1s de una d\xe9cada de optimizaci\xf3n en el compilador LLVM."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{class:"highlight",children:"Compa\xf1\xedas l\xedderes involucradas: "})," Continuamente desarrollado por compa\xf1\xedas como Google, Apple, Microsoft, Mozilla, y Facebook."]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,r.M)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},4552:(e,s,a)=>{a.d(s,{I:()=>t,M:()=>i});var n=a(11504);const r={},o=n.createContext(r);function i(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);