"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[440],{4764:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=t(17624),l=t(4552);const o={title:"2. Conectar Wallet",description:"Conectar una wallet mediante una extensi\xf3n de navegador"},s="Conectar Wallet",c={id:"frontend/connect-wallet",title:"2. Conectar Wallet",description:"Conectar una wallet mediante una extensi\xf3n de navegador",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/frontend/connect-wallet.md",sourceDirName:"frontend",slug:"/frontend/connect-wallet",permalink:"/es/frontend/connect-wallet",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/connect-wallet.md",tags:[],version:"current",frontMatter:{title:"2. Conectar Wallet",description:"Conectar una wallet mediante una extensi\xf3n de navegador"},sidebar:"reference",previous:{title:"1. Getting Started",permalink:"/es/frontend/getting-started"},next:{title:"Todos los Hooks",permalink:"/es/frontend/hooks"}},r={},i=[{value:"useWallet()",id:"usewallet",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"conectar-wallet",children:"Conectar Wallet"}),"\n",(0,a.jsxs)(n.p,{children:["Un usuario primero debe dar permiso a una wallet mediante una extensi\xf3n de navegador para que su dApp pueda leer informaci\xf3n de cuentas o solicitar una firma para una transacci\xf3n. ",(0,a.jsx)(n.code,{children:"useWallet()"})," le da todo lo necesario para realizar esto. ",(0,a.jsx)(n.code,{children:"useAllWallets()"})," devuelve una lista de las extensiones soportadas para que el usuario pueda elegir qu\xe9 wallet le gustar\xeda conectar. e.g. Talisman, PolkadotJS, Subwallet, etc."]}),"\n",(0,a.jsx)(n.h2,{id:"usewallet",children:"useWallet()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { useWallet, useAllWallets } from 'useink'\n\nexport const ConnectWallet = ({ children }) => {\n  const { account, connect, disconnect } = useWallet()\n  const wallets = useAllWallets()\n\n  if (!account) {\n    return (\n      <ul>\n        {wallets.map((w) => (\n          <li key={w.title}>\n            {w.installed ? (\n              <button onClick={() => connect(w.extensionName)}>\n                <img src={w.logo.src} alt={w.logo.alt} />\n                Connect to {w.title}\n              </button>\n            ) : (\n              <a href={w.installUrl}>\n                <img src={w.logo.src} alt={w.logo.alt} />\n                Install {w.title}\n              </a>\n            )}\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  return (\n    <>\n      <p>You are connected as {account?.name || account.address}</p>\n\n      <button onClick={disconnect}>Disonnect Wallet</button>\n    </>\n  )\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Luego de que una wallet ha sido conectada, cualquier cambio de permisos en la wallet va a actualizar autom\xe1ticamente la aplicaci\xf3n en React.\n",(0,a.jsx)(n.code,{children:"useWallet"})," tiene muchas m\xe1s funcionalidades, incluyendo herramientas para cambiar la cuenta seleccionada. Usted puede ",(0,a.jsx)(n.a,{href:"/frontend/core/hooks/wallets/use-wallet",children:"aprender m\xe1s sobre useWallet aqu\xed"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,l.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>c,M:()=>s});var a=t(11504);const l={},o=a.createContext(l);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);