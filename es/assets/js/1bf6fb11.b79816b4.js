"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[4952],{83236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var s=n(17624),o=n(4552);const r={title:"useEvents",description:"React hook for fetching contract events from state"},a="useEvents",c={id:"frontend/react/hooks/contracts/use-events",title:"useEvents",description:"React hook for fetching contract events from state",source:"@site/docs/frontend/react/hooks/contracts/use-events.md",sourceDirName:"frontend/react/hooks/contracts",slug:"/frontend/react/hooks/contracts/use-events",permalink:"/es/frontend/react/hooks/contracts/use-events",draft:!1,unlisted:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/react/hooks/contracts/use-events.md",tags:[],version:"current",frontMatter:{title:"useEvents",description:"React hook for fetching contract events from state"},sidebar:"reference",previous:{title:"useEventSubscription",permalink:"/es/frontend/react/hooks/contracts/use-event-subscription"},next:{title:"useTxEvents",permalink:"/es/frontend/react/hooks/contracts/use-tx-events"}},i={},u=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"useevents",children:"useEvents"}),"\n",(0,s.jsxs)(t.p,{children:["A hook for fetching contract events from state after you have subscribed by calling\n",(0,s.jsx)(t.a,{href:"/frontend/react/hooks/contracts/use-event-subscription",children:"useEventSubscription"}),". You can\nfilter for specific events by passing in a case-sensitive array of event names."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { useEvents, useEventSubscription, useContract } from 'useink'\nimport metadata from 'metadata.json'\n\nconst CONTRACT_ADDRESS = '..'\n\nexport const MyContractView: React.FC = () => {\n  const contract = useContract(CONTRACT_ADDRESS, metadata)\n  useEventSubscription(contract) // Only subscribe to a contract's events one time.\n  const { events: allContractEvents } = useEvents(contract?.address) // fetch a specific contracts events from state\n  const { events: fooBarEvents } = useEvents(contract?.address, ['Foo', 'Bar']) // only fetch Events Foo and Bar from state\n\n  return (\n    <div>\n      <ul>\n        {allContractEvents.map(e => (\n          <li key={e.id}>\n            {e.name}: Do something with the args -> {JSON.stringify(e.args)}\n          </li>\n        ))}\n      </ul>\n\n      <ul>\n        {fooBarEvents.map(e => (\n          <li key={e.id}>\n            {e.name}: Do something with the args -> {JSON.stringify(e.args)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"{\n  events: {\n      id: string;\n      createdAt: number;\n      name: string; // The name of the event emitted\n      args: unknown[]; // human-readable values emitted in the event\n    }[];\n  // A function to remove an event from state. Useful when a user closes a snackbar notification, etc\n  removeEvent: (args: { address: string, id: string }) => void;\n}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4552:(e,t,n)=>{n.d(t,{I:()=>c,M:()=>a});var s=n(11504);const o={},r=s.createContext(o);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);